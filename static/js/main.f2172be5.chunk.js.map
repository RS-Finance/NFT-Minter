{"version":3,"sources":["components/layouts/upload.js","components/contract/merchant.js","components/contract/contractAddress.js","components/contract/tokenAddress.js","components/layouts/stepper.js","components/layouts/content.js","App.js","reportWebVitals.js","index.js"],"names":["web3","contract","contractToken","MERCHANT","MINTFEE","Item","styled","Paper","theme","typography","body2","textAlign","color","palette","text","secondary","padding","lineHeight","Alert","spacing","React","forwardRef","props","ref","elevation","variant","client","create","MyDropzone","step","nextStep","completeStep","useState","progress","setProgress","loading","setLoading","mintLoading","setMintLoading","sendLoading","setSendLoading","notifyType","setNotifyType","buffer","setBuffer","inputFileRef","useRef","progressRef","open","setOpen","msg","setMsg","previewUrl","setPreviewUrl","account","setAccount","nftName","setNftName","nftType","nftCount","setNftCount","nftDesc","setNftDesc","custName","setCustName","custValue","setCustValue","checked","setChecked","type","file","artType","setArtType","validateFields","setNotification","uploadMetaJson","url","a","metadata","name","description","image","console","log","jsonContent","JSON","stringify","blob","Blob","add","metaAdded","ipfsMeta","path","methods","mintToken","send","from","gas","then","res","resetStep","catch","err","0","1","sendFee","transfer","startMinting","added","useEffect","window","URL","createObjectURL","Web3","ethereum","eth","Contract","ABI","KSFABI","getAccounts","accounts","_msg","_type","handleClose","event","reason","action","Fragment","Button","size","onClick","IconButton","aria-label","fontSize","current","diff","Math","random","diff2","timer","setInterval","clearInterval","previewArt","_file","getFileType","str","split","className","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","sx","width","LinearProgress","value","valueBuffer","Fab","click","onChange","e","target","files","fileType","style","display","accept","Grid","container","direction","item","xs","sm","Card","maxWidth","p","CardMedia","component","controls","src","alt","CardContent","backgroundColor","TextField","id","label","InputProps","readOnly","FormControl","RadioGroup","row","FormControlLabel","control","Radio","mt","required","helperText","placeholder","multiline","rows","FormGroup","Checkbox","steps","HorizontalNonLinearStepper","activeStep","setActiveStep","completed","setCompleted","totalSteps","length","allStepsCompleted","Object","keys","Box","Stepper","nonLinear","map","index","Step","StepButton","Typography","mb","flexDirection","pt","disabled","prevActiveStep","mr","flex","SimpleContainer","status","CssBaseline","Container","flexGrow","md","gutterBottom","fontWeight","MaterialUISwitch","Switch","height","margin","transform","backgroundImage","encodeURIComponent","opacity","mode","content","position","left","top","backgroundRepeat","backgroundPosition","border","borderRadius","ColorModeContext","toggleColorMode","MyApp","balance","setBalance","bottom","right","state","setState","isMobile","setIsMobile","toggleDrawer","anchor","key","getBalance","addr","balKCS","balanceConverted","request","method","params","chainId","setIsConnected","alert","innerWidth","useTheme","colorMode","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","isConnected","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","keepMounted","transformOrigin","MenuItem","renderMobileMenu","Badge","badgeContent","currentTarget","aria-controls","aria-haspopup","list","role","onKeyDown","List","ListItem","button","location","href","ListItemIcon","ListItemText","Divider","m","defaultChecked","Drawer","AppBar","Toolbar","edge","Avatar","noWrap","toString","substring","LoadingButton","ToggleColorMode","setMode","prevMode","createTheme","Provider","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2172be5.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Fab from '@mui/material/Fab';\r\nimport { styled } from '@mui/material/styles';\r\nimport BackupIcon from '@mui/icons-material/Backup';\r\nimport { create } from 'ipfs-http-client';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Button from '@mui/material/Button';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Grid from '@mui/material/Grid';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Web3 from 'web3';\r\nimport ABI from '../contract/abi.json';\r\nimport { contractAddress } from '../contract/contractAddress.js';\r\nimport { MERCHANT } from '../contract/merchant.js';\r\nimport KSFABI from '../contract/tokenabi.json';\r\nimport { tokenAddress } from '../contract/tokenAddress';\r\n\r\n\r\nvar web3, contract, contractToken;\r\n\r\nconst MAX_SIZE = 52428800; //50MB\r\nconst FILE_TYPE = \"image/jpeg, image/png, image/gif,  audio/mp3, audio/wav, video/webm, video/mp4, video/mov\";\r\nconst MINTFEE = \"1000000000000000000\"; //decimal 18\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n  padding: '30px',\r\n  lineHeight: '60px',\r\n}));\r\n\r\nconst ItemForGrid = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  color: theme.palette.text.secondary\r\n\r\n}));\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst client = create('https://ipfs.infura.io:5001/api/v0')\r\n\r\nexport default function MyDropzone({ step, nextStep, completeStep }) {\r\n\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [mintLoading, setMintLoading] = React.useState(false);\r\n  const [sendLoading, setSendLoading] = React.useState(false);\r\n  const [notifyType, setNotifyType] = React.useState('');\r\n  const [buffer, setBuffer] = React.useState(10);\r\n  const inputFileRef = React.useRef();\r\n  const progressRef = React.useRef(() => { });\r\n  const [open, setOpen] = React.useState(false);\r\n  const [msg, setMsg] = React.useState('');\r\n  const [previewUrl, setPreviewUrl] = React.useState('');\r\n  const [account, setAccount] = React.useState('');\r\n\r\n  //NFT properties\r\n  const [nftName, setNftName] = React.useState('');\r\n  const [nftType, setNftType] = React.useState('single');\r\n  const [nftCount, setNftCount] = React.useState(1);\r\n  const [nftDesc, setNftDesc] = React.useState('');\r\n  const [custName, setCustName] = React.useState('');\r\n  const [custValue, setCustValue] = React.useState('');\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  //-------------------------------------------------\r\n\r\n  const [artType, setArtType] = React.useState({\r\n    type: 'img',\r\n    file: null\r\n  });\r\n\r\n  const validateFields = () => {\r\n    if (nftName == '' || nftCount < 1 || nftDesc == '' || checked == false) {\r\n      setNotification('Please input parameters correctly!', 'error');\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  async function uploadMetaJson(url) {\r\n    var metadata = {\r\n      name: nftName,\r\n      description: nftDesc,\r\n      image: url\r\n    }\r\n    metadata[custName] = custValue;\r\n    console.log(metadata);\r\n    var jsonContent = JSON.stringify(metadata);\r\n    const blob = new Blob([jsonContent], { type: \"application/json\" });\r\n    const metaAdded = await client.add(blob);\r\n    const ipfsMeta = `https://ipfs.infura.io/ipfs/${metaAdded.path}`;\r\n\r\n    setMintLoading(true);\r\n    contract.methods.mintToken(account, ipfsMeta).send({ from: account, gas: 200000 }).then((res) => {\r\n      console.log(res);\r\n      setMintLoading(false);\r\n      setNotification('NFT minted successfully!', 'success');\r\n      resetStep();\r\n    }).catch(err => {\r\n      console.log(err);\r\n      setMintLoading(false);\r\n      setNotification('NFT minting failed!', 'error');\r\n    });\r\n    console.log(ipfsMeta);\r\n   \r\n  }\r\n  const resetStep = () => {\r\n    nextStep(0);\r\n    completeStep({});\r\n  }\r\n  async function mint() {\r\n    const file = artType.file;\r\n    const checkParams = validateFields();\r\n    if (checkParams) {\r\n      nextStep(2);\r\n      completeStep({ 0: true, 1: true });\r\n      sendFee(file);\r\n    }\r\n  }\r\n\r\n   async function sendFee(file) {\r\n    setSendLoading(true);\r\n    contractToken.methods.transfer(MERCHANT, MINTFEE).send({ from : account, gas : 200000}).then((res) => {\r\n      console.log(res);\r\n      setSendLoading(false);\r\n      setNotification('KSF token transferred succesfully! ', 'success');\r\n      startMinting(file);\r\n    }).catch(err => {\r\n       console.log(err);\r\n       setSendLoading(false);\r\n       setNotification('Transaction Error!', 'error');\r\n       resetStep();\r\n    })\r\n  }\r\n\r\n  async function startMinting(file) {\r\n    setLoading(true);\r\n    try {\r\n      const added = await client.add(file)\r\n      console.log(added);\r\n      const url = `https://ipfs.infura.io/ipfs/${added.path}`\r\n      console.log(url);\r\n      await uploadMetaJson(url);\r\n      setLoading(false);\r\n\r\n    } catch (error) {\r\n      setNotification(`Error uploading file!`, 'error');\r\n      console.log('Error uploading file: ', error)\r\n      setLoading(false);\r\n      resetStep();\r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    if (artType.file) {\r\n      setPreviewUrl(window.URL.createObjectURL(artType.file));\r\n    }\r\n  }, [artType.file]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      web3 = await new Web3(window.ethereum);\r\n      contract = await new web3.eth.Contract(ABI, contractAddress);\r\n      contractToken = await new web3.eth.Contract(KSFABI, tokenAddress);\r\n      const accounts = await web3.eth.getAccounts();\r\n      setAccount(accounts[0]);\r\n      console.log(account);\r\n      console.log('contractToken',contractToken);\r\n    })();\r\n  }, []);\r\n\r\n  const setNotification = (_msg, _type) => {\r\n    setMsg(_msg);\r\n    setNotifyType(_type);\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleNFTName = (e) => {\r\n\r\n    setNftName(e.target.value);\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const action = (\r\n    <React.Fragment>\r\n      <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n        UNDO\r\n      </Button>\r\n      <IconButton\r\n        size=\"small\"\r\n        aria-label=\"close\"\r\n        color=\"inherit\"\r\n        onClick={handleClose}\r\n      >\r\n        <CloseIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </React.Fragment>\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    progressRef.current = () => {\r\n      if (progress > 100) {\r\n        setProgress(0);\r\n        setBuffer(10);\r\n      } else {\r\n        const diff = Math.random() * 10;\r\n        const diff2 = Math.random() * 10;\r\n        setProgress(progress + diff);\r\n        setBuffer(progress + diff + diff2);\r\n      }\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      progressRef.current();\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  const [fileUrl, updateFileUrl] = useState(``);\r\n\r\n  const triggerInput = () => {\r\n    inputFileRef.current.click();\r\n  }\r\n\r\n  function onChange(e) {\r\n    const file = e.target.files[0];\r\n    const fileType = getFileType(file.type);\r\n\r\n    nextStep(1);\r\n    completeStep({ 0: true });\r\n\r\n    if (file.size > MAX_SIZE) {\r\n      setNotification('File size is too large.', 'success');\r\n      return;\r\n    }\r\n    previewArt(fileType, file);\r\n\r\n  }\r\n\r\n  const previewArt = (type, _file) => {\r\n\r\n\r\n    switch (type) {\r\n      case 'image':\r\n        setArtType({ type: 'img', file: _file });\r\n        break;\r\n      case 'audio':\r\n        setArtType({ type: 'audio', file: _file })\r\n        break;\r\n      case 'video':\r\n        setArtType({ type: 'video', file: _file })\r\n        break;\r\n    }\r\n  }\r\n\r\n  const getFileType = (str) => {\r\n    const temArr = str.split('/');\r\n    return temArr[0];\r\n  }\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        action={action}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n\r\n      >\r\n        <Alert onClose={handleClose} severity={notifyType} sx={{ width: '100%' }}>\r\n          {msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      {loading && (\r\n        <>\r\n          <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} color=\"success\" />\r\n          <h3>Uploading Meta data information into IPFS...</h3>\r\n        </>\r\n      )\r\n      }\r\n      {\r\n        mintLoading && (\r\n          <>\r\n            <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} color=\"primary\" />\r\n            <h3>Minting NFT...</h3>\r\n          </>\r\n        )\r\n      }\r\n      {\r\n        sendLoading && (\r\n          <>\r\n            <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} color=\"secondary\" />\r\n            <h3>Sending KSF token for Minting Fee...</h3>\r\n          </>\r\n        )\r\n      }\r\n      <section>\r\n        {step === 0 && (\r\n          <Item>\r\n            <Fab size=\"large\" color=\"default\" aria-label=\"upload\" onClick={triggerInput}>\r\n              <BackupIcon />\r\n            </Fab>\r\n            <h2> Click Upload Button</h2>\r\n            <h4>JPG/PNG images, GIFs, WAV/MP3 or WebM/MP4/MOV videos accepted. 50MB limit.</h4>\r\n            <input\r\n              type=\"file\"\r\n              onChange={onChange}\r\n              ref={inputFileRef}\r\n              style={{ display: 'none' }}\r\n              accept={FILE_TYPE}\r\n            />\r\n          </Item>\r\n        )}\r\n        {\r\n          step === 1 && (\r\n            <>\r\n              <h2>Confirm the details of your work before moving on to sign your NFT. Once you mint your NFT, you won’t be able to make any changes</h2>\r\n              <Grid container spacing={6} direction=\"row-reverse\">\r\n\r\n\r\n                <Grid item xs={12} sm={6}>\r\n\r\n                  <Grid container>\r\n                    <Card sx={{ maxWidth: '100%' }} variant=\"outlined\" p={3}>\r\n\r\n                      <CardMedia\r\n                        component={artType.type}\r\n                        controls\r\n                        src={previewUrl}\r\n                        alt={artType.type}\r\n                      />\r\n\r\n                      <CardContent style={{ backgroundColor: \"#373737\" }}>\r\n                        <TextField\r\n\r\n                          id=\"outlined-required\"\r\n                          label=\"Name\"\r\n                          type=\"text\"\r\n                          name=\"nftNameforcard\"\r\n                          value={nftName}\r\n                          InputProps={{\r\n                            readOnly: true,\r\n                          }}\r\n\r\n                        />\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Grid container >\r\n                    <FormControl component=\"fieldset\" style={{ width: '100%' }}>\r\n                      <h3 >Collection Type</h3>\r\n                      <RadioGroup row aria-label=\"ctype\" name=\"row-radio-buttons-group\" value={nftType}>\r\n                        <FormControlLabel value=\"single\" control={<Radio />} label=\"Single\" />\r\n                        {/* <FormControlLabel value=\"multiple\" control={<Radio />} label=\"Multiple\" /> */}\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid container mt={2}>\r\n                    <FormControl component=\"fieldset\" style={{ width: '100%' }}>\r\n                      <TextField\r\n                        required\r\n                        id=\"outlined-required\"\r\n                        label=\"Number of Copies\"\r\n                        type=\"Number\"\r\n                        value={nftCount}\r\n                        onChange={(e) => { setNftCount(e.target.value) }}\r\n                        helperText=\"Number of copies (only applies to CrossMint1155)\"\r\n                        InputProps={{\r\n                          readOnly: true\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid container mt={2}>\r\n                    <FormControl component=\"fieldset\" style={{ width: '100%' }}>\r\n                      <h3 >Properties</h3>\r\n                      <TextField\r\n                        required\r\n                        id=\"outlined-required\"\r\n                        label=\"Name\"\r\n                        type=\"text\"\r\n                        value={nftName}\r\n                        placeholder=\"Enter your Name\"\r\n                        name=\"nftName\"\r\n                        onChange={handleNFTName}\r\n\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid container mt={2}>\r\n                    <FormControl component=\"fieldset\" style={{ width: '100%' }}  >\r\n                      <TextField\r\n                        required\r\n                        id=\"outlined-required\"\r\n                        label=\"Description\"\r\n                        type=\"text\"\r\n                        value={nftDesc}\r\n                        onChange={(e) => { setNftDesc(e.target.value) }}\r\n                        placeholder=\"Enter your Description\"\r\n                        multiline\r\n                        rows={5}\r\n\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid container mt={2}>\r\n                    <h3>Custom Properties (Optional)</h3>\r\n                    <FormControl component=\"fieldset\" style={{ width: '100%' }}  >\r\n                      <Grid container>\r\n                        <Grid item xs={6}>\r\n                          <TextField\r\n\r\n                            id=\"outlined-required\"\r\n                            label=\"Name\"\r\n                            type=\"text\"\r\n                            value={custName}\r\n                            placeholder=\"E.g Date\"\r\n                            onChange={(e) => { setCustName(e.target.value) }}\r\n\r\n\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <TextField\r\n\r\n                            id=\"outlined-required\"\r\n                            label=\"Value\"\r\n                            type=\"text\"\r\n                            value={custValue}\r\n                            placeholder=\"E.g 27/3\"\r\n                            onChange={(e) => { setCustValue(e.target.value) }}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid container mt={2}>\r\n                    <FormGroup style={{ width: '100%' }}>\r\n                      <FormControlLabel control={<Checkbox checked={checked} />} onChange={() => { setChecked(!checked) }} label=\"By minting this NFT you agree that these works belong to you and only you. Please respect the creativity of other artists in the space. We would love you for it.\" />\r\n                    </FormGroup>\r\n                  </Grid>\r\n                  <Grid container mt={2}>\r\n                    <Button variant=\"contained\" color=\"success\" onClick={mint} >Mint NFT</Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          )\r\n        }\r\n\r\n      </section>\r\n    </section>\r\n  );\r\n}","export const MERCHANT = '0xceab67398a2656873d826b50641519c0762d4e61';","export const contractAddress = '0x5C230184d1c8B7598a5a018584686c9f9A6c0867';","export const tokenAddress = '0x755d74d009f656ca1652cbdc135e3b6abfccc455';","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepButton from '@mui/material/StepButton';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport MyDropzone from '../layouts/upload';\r\n\r\n\r\nconst steps = ['Select File', 'Set properties', 'Mint'];\r\n\r\nexport default function HorizontalNonLinearStepper() {\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [completed, setCompleted] = React.useState({});\r\n\r\n    const totalSteps = () => {\r\n        return steps.length;\r\n    };\r\n\r\n    const completedSteps = () => {\r\n        return Object.keys(completed).length;\r\n    };\r\n\r\n    const isLastStep = () => {\r\n        return activeStep === totalSteps() - 1;\r\n    };\r\n\r\n    const allStepsCompleted = () => {\r\n        return completedSteps() === totalSteps();\r\n    };\r\n\r\n    const handleNext = () => {\r\n        const newActiveStep =\r\n            isLastStep() && !allStepsCompleted()\r\n                ? // It's the last step, but not all steps have been completed,\r\n                // find the first step that has been completed\r\n                steps.findIndex((step, i) => !(i in completed))\r\n                : activeStep + 1;\r\n        setActiveStep(newActiveStep);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleStep = (step) => () => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    const handleComplete = () => {\r\n        const newCompleted = completed;\r\n        newCompleted[activeStep] = true;\r\n        setCompleted(newCompleted);\r\n\r\n        handleNext();\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n        setCompleted({});\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }} style={{ padding: '50px 0px' }}>\r\n            <Stepper nonLinear activeStep={activeStep}>\r\n                {steps.map((label, index) => (\r\n                    <Step key={label} completed={completed[index]}>\r\n                        <StepButton color=\"inherit\" >\r\n                            {label}\r\n                        </StepButton>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <div>\r\n                {allStepsCompleted() ? (\r\n                    <React.Fragment>\r\n                        <Typography sx={{ mt: 2, mb: 1 }}>\r\n                            All steps completed - you&apos;re finished\r\n                        </Typography>\r\n\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <React.Fragment>\r\n                        <Typography sx={{ mt: 2, mb: 1 }} variant=\"h4\"> {activeStep == 0 ? 'Select Artwork' : activeStep == 1 ? 'Set the Properties' : 'Mint your NFT'}</Typography>\r\n                        <MyDropzone step={activeStep} nextStep={setActiveStep} completeStep={setCompleted} />\r\n                        <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n                            <Button\r\n                                color=\"inherit\"\r\n                                disabled={activeStep === 0}\r\n                                onClick={handleBack}\r\n                                sx={{ mr: 1 }}\r\n                            >\r\n                                Back\r\n                            </Button>\r\n                            <Box sx={{ flex: '1 1 auto' }} />\r\n                        \r\n                            \r\n                                <Box sx={{ flex: '1 1 auto' }} />\r\n                                <Button onClick={handleReset}>Reset</Button>\r\n                            \r\n                            {activeStep !== steps.length &&\r\n                                (completed[activeStep] ? (\r\n                                    <Typography variant=\"caption\" sx={{ display: 'inline-block' }}>\r\n                                        Step {activeStep + 1} already completed\r\n                                    </Typography>\r\n                                ) : (\r\n                                    ''\r\n                                ))}\r\n                        </Box>\r\n                    </React.Fragment>\r\n                )}\r\n            </div>\r\n        </Box>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport { styled } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stepper from '../layouts/stepper';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}))\r\n\r\nexport default function SimpleContainer(status) {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" style = {{padding : '100px 0 100px 0'}}>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n      <Grid container  >\r\n        <Grid item xs={12} md={12}>\r\n          <Item style = {{padding : '50px 100px'}}>\r\n          <Typography variant=\"h5\" gutterBottom component=\"div\" style = {{ color : '#4cc5c1', fontWeight : 'bold'}}>\r\n            Mint an NFT!\r\n          </Typography>\r\n          <Stepper/>\r\n          </Item>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n        \r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}","import * as React from 'react';\nimport Content from './components/layouts/content'\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\nimport { styled } from '@mui/material/styles';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Badge from '@mui/material/Badge';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MailIcon from '@mui/icons-material/Mail';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport Avatar from '@mui/material/Avatar';\nimport Switch from '@mui/material/Switch';\nimport Container from '@mui/material/Container';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport Fab from '@mui/material/Fab';\nimport HomeIcon from '@mui/icons-material/Home';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\nimport SendIcon from '@mui/icons-material/Send';\nimport Button from '@mui/material/Button';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Web3 from 'web3';\nvar web3;\n\n\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\n  width: 62,\n  height: 36,\n  padding: 6,\n  '& .MuiSwitch-switchBase': {\n    margin: 1,\n    padding: 0,\n    transform: 'translateX(6px)',\n    '&.Mui-checked': {\n      color: '#fff',\n      transform: 'translateX(22px)',\n      '& .MuiSwitch-thumb:before': {\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n          '#fff',\n        )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\n      },\n      '& + .MuiSwitch-track': {\n        opacity: 1,\n        backgroundColor: theme.palette.mode === 'dark' ? '#DDDDDD' : '#DDDDDD',\n      },\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    backgroundColor: theme.palette.mode === 'dark' ? '#21827F' : '#fff',\n    width: 34,\n    height: 34,\n    '&:before': {\n      content: \"''\",\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      left: 0,\n      top: 0,\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      border: theme.palette.mode === 'dark' ? '1px solid teal' : '1px solid white',\n      borderRadius: '60%',\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n        '#000',\n      )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\n    },\n  },\n  '& .MuiSwitch-track': {\n    opacity: 1,\n    backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n    borderRadius: 20 / 2,\n  },\n}));\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => { } });\n\nfunction MyApp() {\n\n  const [balance, setBalance] = React.useState(0);\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  const [isMobile, setIsMobile] = React.useState(false);\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  React.useEffect(() => {\n    (async () => {\n      if (window.ethereum) {\n        web3 = await new Web3(window.ethereum);\n\n      } else {\n        alert('Install Metamask wallet');\n      }\n\n    })();\n  }, []);\n\n  React.useEffect(() => {\n    if (window.innerWidth < 1093) {\n      setIsMobile(true);\n    } else {\n      setIsMobile(false);\n    }\n  }, [window.innerWidth]);\n  async function getBalance(addr) {\n    var balKCS = await web3.eth.getBalance(addr);\n    var balanceConverted = balKCS / (10 ** 18);\n    setBalance(balanceConverted);\n    console.log(balanceConverted);\n  }\n\n  async function connectWallet() {\n    if (window.ethereum) {\n    \n      await window.ethereum\n      .request({ method: 'eth_requestAccounts' });\n      await  window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x141' }]\n      });\n      const accountArr = await web3.eth.getAccounts();\n      getBalance(accountArr[0]);\n      setIsConnected(true);\n\n    }\n  }\n\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  const [isConnected, setIsConnected] = React.useState(false); //Check Wallet connect status\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"error\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton\n          size=\"large\"\n          aria-label=\"show 17 new notifications\"\n          color=\"inherit\"\n        >\n          <Badge badgeContent={17} color=\"error\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          size=\"large\"\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n  const list = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n\n        <ListItem button onClick={() => { window.location.href = '' }} >\n          <ListItemIcon>\n            <HomeIcon /> &nbsp; Home\n          </ListItemIcon>\n          <ListItemText />\n        </ListItem>\n        <ListItem button onClick={() => { window.location.href = 'https://ksfswap.finance/farming' }} >\n          <ListItemIcon>\n            <EqualizerIcon /> &nbsp; Farming\n          </ListItemIcon>\n          <ListItemText />\n        </ListItem>\n        <ListItem button onClick={() => { window.location.href = 'https://ksfswap.finance/staking' }} >\n          <ListItemIcon>\n            <MonetizationOnIcon /> &nbsp; Staking\n          </ListItemIcon>\n          <ListItemText />\n        </ListItem>\n        <ListItem button onClick={() => { window.location.href = 'https://multisender.ksfswap.finance' }} >\n          <ListItemIcon>\n            <SendIcon /> &nbsp; MultiSender\n          </ListItemIcon>\n          <ListItemText />\n        </ListItem>\n      </List>\n      <Divider />\n      <List>\n        <ListItem button >\n          <ListItemIcon>\n            <FormGroup>\n              <FormControlLabel\n                control={<MaterialUISwitch sx={{ m: 3 }} defaultChecked\n                  onChange={colorMode.toggleColorMode}\n                  name=\"toggleDarks\"\n                  color=\"default\" />}\n                label=\"\"\n              />\n            </FormGroup>\n          </ListItemIcon>\n          <ListItemText />\n        </ListItem>\n\n      </List>\n    </Box>\n  );\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <div>\n        {['left'].map((anchor) => (\n          <React.Fragment key={anchor}>\n\n            <Drawer\n              anchor={anchor}\n              open={state[anchor]}\n              onClose={toggleDrawer(anchor, false)}\n            >\n              {list(anchor)}\n            </Drawer>\n          </React.Fragment>\n        ))}\n      </div>\n      <AppBar position=\"static\" color=\"default\">\n        <Container>\n          <Toolbar >\n            {\n              isMobile && (\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  edge=\"start\"\n                  onClick={toggleDrawer('left', true)}\n                  sx={{ mr: 2, display: { sm: 'block' } }}\n                >\n                  <MenuIcon />\n                </IconButton>\n              )\n            }\n\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              sx={{ mr: 2 }}\n              onClick={() => {\n                window.location.href = '/';\n              }}\n            >\n              <Avatar alt=\"KCC logo\" src=\"/imgs/logo.png\" sx={{ width: 35, height: 35 }} />\n            </IconButton>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              sx={{ display: { xs: 'block', sm: 'block' } }}\n              className=\"default-font\"\n            >\n              KsfSwap NFT Minter\n            </Typography>\n\n            <Box sx={{ flexGrow: 1 }} />\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n              <Button color=\"primary\" onClick={() => { window.location.href = '' }} >\n                <HomeIcon /> &nbsp; Home\n              </Button>\n              <Button color=\"primary\" onClick={() => { window.location.href = 'https://ksfswap.finance/farming' }} >\n                <EqualizerIcon /> &nbsp; Farming\n              </Button>\n              <Button color=\"primary\" onClick={() => { window.location.href = 'https://ksfswap.finance/staking' }} >\n                <MonetizationOnIcon /> &nbsp; Staking\n              </Button>\n              <Button color=\"primary\" onClick={() => { window.location.href = 'https://multisender.ksfswap.finance' }} >\n                <SendIcon /> &nbsp; MultiSender\n              </Button>\n            </Box>\n            <Box sx={{ flexGrow: 1 }} />\n            <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n\n              <FormGroup>\n                <FormControlLabel\n                  control={<MaterialUISwitch sx={{ m: 3 }} defaultChecked\n                    onChange={colorMode.toggleColorMode}\n                    name=\"toggleDark\"\n                    color=\"default\" />}\n                  label=\"\"\n                />\n\n              </FormGroup>\n            </Box>\n            {\n              isConnected === true ? (\n                <Box sx={{ display: { xs: 'flex', md: 'flex' } }}>\n                  <Fab variant=\"extended\" color=\"inherit\" style={{ backgroundColor: theme.palette.mode === 'dark' ? 'rgb(60 52 52)' : '#fff' }}>\n                    <h5 className=\"wallet\">{balance.toString().substring(0, 6)} KCS</h5>&nbsp;\n                    <Avatar alt=\"KCC logo\" src=\"/imgs/network.png\" />\n                  </Fab>\n                </Box>\n              ) : (\n                <Box sx={{ display: { xs: 'flex', md: 'flex' } }}>\n                  <LoadingButton variant=\"outlined\" color=\"primary\" onClick={connectWallet}>\n                    <AccountBalanceWalletIcon /> &nbsp; Connect Wallet\n                  </LoadingButton>\n                </Box>\n              )\n            }\n\n          </Toolbar>\n        </Container>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n\n    </Box>\n\n  );\n}\n\nexport default function ToggleColorMode() {\n  const [mode, setMode] = React.useState('dark');\n\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'dark' ? 'light' : 'dark'));\n      },\n    }),\n    [],\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n      }),\n    [mode],\n  );\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <MyApp />\n        <Content />\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}